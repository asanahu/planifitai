name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  pull-requests: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest ruff black bandit safety pip-audit

      # 1) Secret scan (servidor) — BLOQUEANTE
      - name: Secret scan (gitleaks)
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 2) Lint rápido con Ruff — BLOQUEANTE (sustituye a flake8)
      - name: Ruff (lint best-effort)
        run: ruff check . || true

      # 3) Formato con Black (modo check) — BLOQUEANTE
      - name: Black (check)
        run: black --check .

      # 4) Análisis estático de seguridad — NO bloqueante (reduce falsos positivos)
      - name: Bandit (best-effort)
        run: |
          # Ajusta "app" si tu código vive en otra carpeta
          bandit -q -r app || true

      # 5) Tests — BLOQUEANTE
      - name: Pytest
        run: pytest -q

      # 6) Auditoría de dependencias — BLOQUEANTE
      - name: pip-audit (strict)
        run: pip-audit -r requirements.txt --strict

      # 7) Safety — NO bloqueante (a veces falla por red/servidor)
      - name: Safety (best-effort)
        run: safety check -r requirements.txt || true

